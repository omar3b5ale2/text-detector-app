String? customValidate({  required String value,  String? titleCheck,  bool trimWhitespace = true,  int? minLength,  int? maxLength,  String? pattern,  String? emptyMessage,  String? minLengthMessage,  String? maxLengthMessage,  String? invalidPatternMessage,}) {  // Assigning default field name  final String p0 = titleCheck ?? "Field";  // Trim leading/trailing whitespace if trimWhitespace is true  final String trimmedValue = trimWhitespace ? value.trim() : value;  /// Kareem commented it because of an error// /*  // Check if value is empty  if (minLength == null && trimmedValue.isEmpty) {    return emptyMessage ?? "Please enter this $p0.";  }// */  // Check for minimum length  if (minLength != null && trimmedValue.length < minLength) {    return minLengthMessage ??        "$p0 must be at least $minLength characters long.";  }  // Check for maximum length  if (maxLength != null && trimmedValue.length > maxLength) {    return maxLengthMessage ??        "$p0 must be at most $maxLength characters long.";  }  // Check for pattern (regex) validation  if (pattern != null) {    final regex = RegExp(pattern);    if (!regex.hasMatch(trimmedValue)) {      return invalidPatternMessage ?? "$p0 format is invalid.";    }  }  // If all checks pass, return null (no errors)  return null;}